stages:
  - build
  - smells
  - issue
  - test
  - package
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: "unix:///var/run/docker.sock"

build:
  stage: build
  image: maven:3.8.7
  tags:
    - Asdc
  only:
    - JWT_Backend_Integration
  services:
    - name: docker:dind
      alias: docker
  script:
    - echo "Maven build started"
    - mvn compile

smells_job:
  stage: smells
  image: openjdk:11
  script:
    - pwd
    - echo "Start smells-job"
    - mkdir smells/
    - java -jar .gitlab/DesigniteJava.jar -i /builds/courses/2023-winter/csci-5308/group25 -o smells/ -d
    - cd smells/
    - ls -a
  artifacts:
    paths:
      - smells/
      - /builds/courses/2023-winter/csci-5308/group25

issue-job:
  stage: issue
  dependencies:
    - smells_job
  image: "python:3.10"
  script:
    - ls smells/ -a
    - python --version
    - pip install -r /builds/courses/2023-winter/csci-5308/group25/.gitlab/requirements.txt
    - python /builds/courses/2023-winter/csci-5308/group25/.gitlab/issue.py $CI_COMMIT_SHA


test:
  stage: test
  image: maven:3.8.7
  tags:
    - Asdc
  only:
    - JWT_Backend_Integration
  script:
    - echo "Running tests"
    - mvn test

package:
  stage: package
  image: maven:3.8.7
  tags:
    - Asdc
  script:
    - echo "Maven packaging started"
    - mvn clean package
  artifacts:
    paths:
      - target/*.jar
  only:
    - JWT_Backend_Integration

deploy:
  stage: deploy
  image: docker:latest
  tags:
    - Asdc
  environment:
    name: development
    url: http://csci5308vm25.research.cs.dal.ca
  only:
    - JWT_Backend_Integration
  before_script:
    - apk update && apk add openssh-client openssh-keygen
    - mkdir -p /root
    - mkdir -p /root/.ssh
    - touch ~/.ssh/known_hosts
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > /root/.ssh/config
    - ssh-keyscan ${DEPLOY_SERVER} >> /root/.ssh/known_hosts || true

  script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    - docker build -t $DOCKER_HUB_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $DOCKER_HUB_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - id
    - ssh csci5308vm25@${DEPLOY_SERVER} "docker login -u \"$DOCKER_HUB_USER\" -p \"$DOCKER_HUB_PASSWORD\""
    - ssh csci5308vm25@${DEPLOY_SERVER} "docker pull $DOCKER_HUB_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - ssh csci5308vm25@${DEPLOY_SERVER} "docker stop app_container || true"
    - ssh csci5308vm25@${DEPLOY_SERVER} "docker rm app_container || true"
    - ssh csci5308vm25@${DEPLOY_SERVER} "docker run --name app_container -d -p 8080:8080 --restart always $DOCKER_HUB_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
